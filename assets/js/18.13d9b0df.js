(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{418:function(a,e,o){"use strict";o.r(e);var t=o(42),s=Object(t.a)({},(function(){var a=this,e=a.$createElement,o=a._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[o("h2",{attrs:{id:"usando-dockfiles"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#usando-dockfiles"}},[a._v("#")]),a._v(" Usando Dockfiles")]),a._v(" "),o("p",[a._v('Habitualmente, mantemos nossas máquinas atualizadas. Mas quando criamos uma imagem, "congelamos" as bibliotecas nas versões que estavam no contêiner no momento do '),o("em",[a._v("commit")]),a._v(". Em diversas situações, precisamos de iniciar um contêiner atualizado. Uma maneira de ter este ambiente é recriar o contêiner, tendo todo o retrabalho de instalar os pacotes e aplicações necessárias. A outra, é usar um arquivo que contenha um roteiro, uma receita, com todas as especificações necessárias para a criação da imagem.")]),a._v(" "),o("p",[a._v("Uma imagem do Docker consiste em camadas somente leitura, cada uma das quais representa uma instrução do Dockerfile. As camadas são empilhadas e cada uma é um resultado (delta) das alterações da camada anterior."),o("a",{attrs:{href:"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Boas práticas para escrita de Dockerfiles"),o("OutboundLink")],1)]),a._v(" "),o("h3",{attrs:{id:"criando-o-dockerfile"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#criando-o-dockerfile"}},[a._v("#")]),a._v(" Criando o Dockerfile")]),a._v(" "),o("p",[a._v("Uma maneira de se trabalhar com o arquivo dockerfile, é criando uma pasta para a construção da imagem e nela colocar este arquivo e outros recursos que serão adicionados à imagem. Também é possível gerar a imagem criando, na linha de comando (prompt do linux) com os passos que estariam dentro do dockerfile. Será visto aqui, a primeira forma.")]),a._v(" "),o("p",[a._v("Para descever o roteiro para a criação da imagem o "),o("em",[a._v("dockerfile")]),a._v(" utiliza uma série comandos. Alguns comandos são usados para contrução da imagem e outros para definir como o contêiner será executado. O arquivo final é o resultado da combinação dos dois tipos de comandos:")]),a._v(" "),o("h3",{attrs:{id:"comandos-de-construcao-build"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#comandos-de-construcao-build"}},[a._v("#")]),a._v(" Comandos de construção (build)")]),a._v(" "),o("p",[a._v("São os comandos que determinam a estrutura da imagem. Definem por exemplo, que imagem base será utilizada, quais pastas do host serão compatilhadas, que portas serão expostas e que bibliotecas serão adicionadas.")]),a._v(" "),o("table",[o("thead",[o("tr",[o("th",{staticStyle:{"text-align":"left"}},[a._v("Comando")]),a._v(" "),o("th",{staticStyle:{"text-align":"left"}},[a._v("Descrição")])])]),a._v(" "),o("tbody",[o("tr",[o("td",{staticStyle:{"text-align":"left"}},[a._v("ADD")]),a._v(" "),o("td",{staticStyle:{"text-align":"left"}},[a._v("Adiciona um arquivo do hospedeiro para a imagem.")])]),a._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[a._v("ARG")]),a._v(" "),o("td",{staticStyle:{"text-align":"left"}},[a._v("Define uma variável de ambiente. Visível somente durante a construção.")])]),a._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[a._v("COPY")]),a._v(" "),o("td",{staticStyle:{"text-align":"left"}},[a._v("Copia arquivos para a imagem.")])]),a._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[a._v("ENTRYPOINT")]),a._v(" "),o("td",{staticStyle:{"text-align":"left"}},[a._v("Define qual é o comando padrão que será executado quando o contêiner estiver rodando.")])]),a._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[a._v("EXPOSE")]),a._v(" "),o("td",{staticStyle:{"text-align":"left"}},[a._v("Informa ao docker que uma porta da rede do contêiner está disponível.")])]),a._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[a._v("FROM")]),a._v(" "),o("td",{staticStyle:{"text-align":"left"}},[a._v("É o primeiro comando do arquivo e deve ficar na primeira linha. Define qual a imagem será utilizada.")])]),a._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[a._v("MAINTAINER")]),a._v(" "),o("td",{staticStyle:{"text-align":"left"}},[a._v("Define quem é o mantenedor da imagem. É um comando opcional.")])]),a._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[a._v("RUN")]),a._v(" "),o("td",{staticStyle:{"text-align":"left"}},[a._v("É usado para executar comandos durante os passos de construção da imagem.")])]),a._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[a._v("VOLUME")]),a._v(" "),o("td",{staticStyle:{"text-align":"left"}},[a._v("Faz a ligação entre pastas do contêiner e do hospedeiro.")])])])]),a._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[a._v("COPY ou ADD?")]),a._v(" "),o("p",[a._v("Os dois comandos tem própósitos semelhantes, mas diferenças importantes:")]),a._v(" "),o("ul",[o("li",[o("p",[a._v("o "),o("strong",[a._v("COPY")]),a._v(' é mais "explicito" e é usado para copiar apenas uma pasta ou um arquivo do host para uma pasta na imagem. Na sua sintaxe devem ser especificadas as pastas de '),o("em",[a._v("origem")]),a._v(" e "),o("em",[a._v("destino")]),a._v(".")])]),a._v(" "),o("li",[o("p",[a._v("o comando "),o("strong",[a._v("ADD")]),a._v(" é mais flexível: além de copiar arquivos e pastas como faz o COPY, ele permite que seja usada uma "),o("em",[a._v("URL")]),a._v(" como "),o("em",[a._v("origem")]),a._v(". Também permite a extração de um arquivo tar da "),o("em",[a._v("origem")]),a._v(" diretamente para o "),o("em",[a._v("destino")]),a._v(".")])])])]),a._v(" "),o("h3",{attrs:{id:"comandos-de-inicializacao-do-container"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#comandos-de-inicializacao-do-container"}},[a._v("#")]),a._v(" Comandos de inicialização do container")]),a._v(" "),o("p",[a._v("São os comandos que serão executados quando o container for inicializado.")]),a._v(" "),o("table",[o("thead",[o("tr",[o("th",{staticStyle:{"text-align":"left"}},[a._v("Comando")]),a._v(" "),o("th",{staticStyle:{"text-align":"left"}},[a._v("Descrição")])])]),a._v(" "),o("tbody",[o("tr",[o("td",{staticStyle:{"text-align":"left"}},[a._v("CMD")]),a._v(" "),o("td",{staticStyle:{"text-align":"left"}},[a._v("É usado para executar comandos dentro do contêiner.")])]),a._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[a._v("ENTRYPOINT")]),a._v(" "),o("td",{staticStyle:{"text-align":"left"}},[a._v("Define qual é o comando padrão que será executado quando o contêiner for iniciado.")])]),a._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[a._v("USER")]),a._v(" "),o("td",{staticStyle:{"text-align":"left"}},[a._v("Define um usuário ou UID para o contêiner criado.")])]),a._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[a._v("ENV")]),a._v(" "),o("td",{staticStyle:{"text-align":"left"}},[a._v("Define variáveis de ambiente para o contêiner.")])])])]),a._v(" "),o("h3",{attrs:{id:"o-arquivo-dockerignore"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#o-arquivo-dockerignore"}},[a._v("#")]),a._v(" O arquivo .dockerignore")]),a._v(" "),o("p",[a._v("Ao criar a imagem, as pastas e arquivos que estão localizados na pasta do projeto serão incluídos automaticamente nela. Mas, em sua construção, com frequencia utilizamos alguns recursos auxiliares que não são necessários na imagem. A maneira de informar ao Docker que estes arquivos e pastas não devem fazer parte da imagem é listá-los em um arquivo "),o("em",[a._v(".dockerignore")]),a._v(", colocando um nome por linha. Este arquivo deve ficar na mesma pasta do projeto, junto com o "),o("em",[a._v("dockerfile")]),a._v(".")]),a._v(" "),o("h1",{attrs:{id:"todo-detalhe-os-comandos-dentro-dos-dockerfile"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#todo-detalhe-os-comandos-dentro-dos-dockerfile"}},[a._v("#")]),a._v(" [TODO! Detalhe os comandos dentro dos Dockerfile]")]),a._v(" "),o("h3",{attrs:{id:"dockerfile-basico"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-basico"}},[a._v("#")]),a._v(" Dockerfile Básico")]),a._v(" "),o("p",[a._v("Exemplo 1- Faremos um roteiro para uma imagem base com alguns utilitários de uso comum:")]),a._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[a._v('FROM alpine:3.9\nLABEL maintainer="Marcos Honorato"\nLABEL version="1.0"\nLABEL build-date="2019-04-28T06:30:00.00"\nLABEL description="Servidor alpine 3.9 com os utilitários rsync, mc, wget e vim."\n# Instalando os utilitários básicos.\nRUN apk update \nRUN apk add rsync \nRUN apk add mc \nRUN apk add wget \nRUN apk add vim\n# Chamando o bash\nCMD ["/bin/bash"]\n')])])]),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[a._v("Reduza o número de camadas na imagem")]),a._v(" "),o("ul",[o("li",[a._v("Para cada comando "),o("em",[a._v("RUN")]),a._v(" que é colocado dentro do "),o("em",[a._v("dockerfile")]),a._v(" é criada uma camada na imagem. Quanto mais camadas, maior a imagem se torna. Uma forma de evitar é executar vãrios comandos dentro de um "),o("em",[a._v("RUN")]),a._v(" sempre que possível.")])])]),a._v(" "),o("p",[a._v("Reescrevendo o dockerfile para gerar uma imagem menor:")]),a._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[a._v('# Instalando os utilitários básicos.\n\nFROM alpine:3.9\nLABEL maintainer="Marcos Honorato"\nLABEL version="1.0"\nLABEL build-date="2019-04-28T06:30:00.00"\nLABEL description="Servidor alpine 3.9 com os utilitários rsync, mc, wget e vim."\n# Instalando os utilitários básicos.\nRUN apk update && \\\n    apk add rsync && \\\n    apk add mc && \\\n    apk add wget && \\\n    apk add vim\n# Chamando o bash\nCMD ["/bin/bash"]\n')])])]),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[a._v("Atualizando o ambiente")]),a._v(" "),o("ul",[o("li",[a._v("As imagens base oficiais são regularmente atualizadas para que incluam as últimas versões dos pacotes. Logo não é necessário colocar comandos de atualização como "),o("em",[a._v("apt-get upgrade")]),a._v(" ou "),o("em",[a._v("yum upgrade")]),a._v(" nos roteiros criados com dockerfile.")]),a._v(" "),o("li",[a._v("Os gerenciadores de pacotes como "),o("em",[a._v("Apt")]),a._v(" e "),o("em",[a._v("Yum")]),a._v(" acabam deixando arquivos de listas e arquivos de cache que acabam aumentado o tamanho da imagem. Após instalar os pacotes necessário procure remover todos os arquivos criados por eles que não serão mais necessários.")])])]),a._v(" "),o("p",[a._v("Para o "),o("strong",[a._v("APT")]),a._v(", utiliza-se a seguinte sintaxe:")]),a._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[a._v("RUN apt-get update && \\\n    apt-get install wget -y && \\ \n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\ apt-get clean\n")])])]),o("p",[a._v("Para o "),o("strong",[a._v("Yum")]),a._v(", utiliza-se a seguinte sintaxe:")]),a._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[a._v("RUN yum install httpd -y && \\\n    yum clean all\n")])])]),o("h3",{attrs:{id:"dockerfile-ou-docker-compose"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-ou-docker-compose"}},[a._v("#")]),a._v(" Dockerfile ou Docker Compose?")]),a._v(" "),o("p",[a._v("O "),o("em",[a._v("compose")]),a._v(" permite a configuração de recursos que costumam ser definidos durante a construção da imagem e por isso gera dúvidas. O "),o("em",[a._v("compose")]),a._v(' é utilizado para a contrução de aplicativos Docker com vários contêineres envolvidos. Dizemos que é uma ferramenta de "orquestração".')]),a._v(" "),o("p",[a._v("Com o ele, você usa um arquivo YAML, o "),o("em",[a._v("compose.yaml")]),a._v(", para configurar os serviços do seu aplicativo. Em seguida, com um único comando, você cria e inicia todos os serviços (contêineres) definidos em sua configuração.")]),a._v(" "),o("p",[a._v("Um exemplo típico é construção de uma aplicação WEB onde teremos um container para o servidor da aplicação e outro para o banco de dados. No "),o("em",[a._v("compose")]),a._v(" definiremos como os dois servidores se comunicarão e mesmo algumas configurações que eram estabelecidas na imagem, como o uso de portas e volumes são tratadas no "),o("em",[a._v("compose")]),a._v(". Essa flexibilidade permite a criação de imagens mais generalistas e com um nível maior de reuso.")]),a._v(" "),o("h4",{attrs:{id:"conheca-um-pouco-mais"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#conheca-um-pouco-mais"}},[a._v("#")]),a._v(" Conheça um pouco mais")]),a._v(" "),o("ul",[o("li",[o("p",[o("a",{attrs:{href:"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Boas práticas para escrita de Dockerfiles"),o("OutboundLink")],1),a._v(";")])]),a._v(" "),o("li",[o("p",[o("a",{attrs:{href:"https://docker-unleashed.readthedocs.io/aula1.html#imagens-conteineres-e-seu-funcionamento",target:"_blank",rel:"noopener noreferrer"}},[a._v("Aula 1: Docker e Microsserviços - Introdução"),o("OutboundLink")],1),a._v(";")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);