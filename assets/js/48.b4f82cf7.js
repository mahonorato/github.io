(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{485:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"linkify-it"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linkify-it"}},[t._v("#")]),t._v(" linkify-it")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://travis-ci.org/markdown-it/linkify-it",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/travis/markdown-it/linkify-it/master.svg?style=flat",alt:"Build Status"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://www.npmjs.org/package/linkify-it",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/npm/v/linkify-it.svg?style=flat",alt:"NPM version"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://coveralls.io/r/markdown-it/linkify-it?branch=master",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/coveralls/markdown-it/linkify-it/master.svg?style=flat",alt:"Coverage Status"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://gitter.im/markdown-it/linkify-it",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://badges.gitter.im/Join%20Chat.svg",alt:"Gitter"}}),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("Links recognition library with FULL unicode support.\nFocused on high quality link patterns detection in plain text.")])]),t._v(" "),a("p",[a("strong",[a("a",{attrs:{href:"http://markdown-it.github.io/linkify-it/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Demo"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("Why it's awesome:")]),t._v(" "),a("ul",[a("li",[t._v("Full unicode support, "),a("em",[t._v("with astral characters")]),t._v("!")]),t._v(" "),a("li",[t._v("International domains support.")]),t._v(" "),a("li",[t._v("Allows rules extension & custom normalizers.")])]),t._v(" "),a("h2",{attrs:{id:"install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" linkify-it --save\n")])])]),a("p",[t._v("Browserification is also supported.")]),t._v(" "),a("h2",{attrs:{id:"usage-examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage-examples"}},[t._v("#")]),t._v(" Usage examples")]),t._v(" "),a("h5",{attrs:{id:"example-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-1"}},[t._v("#")]),t._v(" Example 1")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" linkify "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'linkify-it'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Reload full tlds list & add unofficial `.onion` domain.")]),t._v("\nlinkify\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tlds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tlds'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Reload with full tlds list")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tlds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'onion'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add unofficial `.onion` domain")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git:'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http:'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Add `git:` protocol as "alias"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ftp:'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Disable `ftp:` ptotocol")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" fuzzyIP"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enable IPs in fuzzy links (without schema)")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("linkify"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Site github.com!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("linkify"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Site github.com!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ {")]),t._v("\n                                                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   schema: "",')]),t._v("\n                                                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   index: 5,")]),t._v("\n                                                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   lastIndex: 15,")]),t._v("\n                                                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   raw: "github.com",')]),t._v("\n                                                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   text: "github.com",')]),t._v("\n                                                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   url: "http://github.com",')]),t._v("\n                                                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// } ]")]),t._v("\n")])])]),a("h5",{attrs:{id:"example-2-add-twitter-mentions-handler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-2-add-twitter-mentions-handler"}},[t._v("#")]),t._v(" Example 2. Add twitter mentions handler")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("linkify"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("validate")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tail "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("twitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("twitter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^([a-zA-Z0-9_]){1,15}(?!_)(?=$|'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src_ZPCc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("twitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tail"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Linkifier allows punctuation chars before prefix,")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// but we additionally disable `@` ("@@mention" is invalid)')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" tail"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" tail"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("twitter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("normalize")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    match"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://twitter.com/'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" match"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^@")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("p",[a("strong",[a("a",{attrs:{href:"http://markdown-it.github.io/linkify-it/doc",target:"_blank",rel:"noopener noreferrer"}},[t._v("API documentation"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"new-linkifyit-schemas-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-linkifyit-schemas-options"}},[t._v("#")]),t._v(" new LinkifyIt(schemas, options)")]),t._v(" "),a("p",[t._v("Creates new linkifier instance with optional additional schemas.\nCan be called without "),a("code",[t._v("new")]),t._v(" keyword for convenience.")]),t._v(" "),a("p",[t._v("By default understands:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("http(s)://...")]),t._v(" , "),a("code",[t._v("ftp://...")]),t._v(", "),a("code",[t._v("mailto:...")]),t._v(" & "),a("code",[t._v("//...")]),t._v(" links")]),t._v(" "),a("li",[t._v('"fuzzy" links and emails (google.com, foo@bar.com).')])]),t._v(" "),a("p",[a("code",[t._v("schemas")]),t._v(" is an object, where each key/value describes protocol/rule:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("key")]),t._v(" - link prefix (usually, protocol name with "),a("code",[t._v(":")]),t._v(" at the end, "),a("code",[t._v("skype:")]),t._v("\nfor example). "),a("code",[t._v("linkify-it")]),t._v(" makes sure that prefix is not preceded with\nalphanumeric char.")]),t._v(" "),a("li",[a("strong",[t._v("value")]),t._v(" - rule to check tail after link prefix\n"),a("ul",[a("li",[a("em",[t._v("String")]),t._v(" - just alias to existing rule")]),t._v(" "),a("li",[a("em",[t._v("Object")]),t._v(" "),a("ul",[a("li",[a("em",[t._v("validate")]),t._v(" - either a "),a("code",[t._v("RegExp")]),t._v(" (start with "),a("code",[t._v("^")]),t._v(", and don't include the\nlink prefix itself), or a validator function which, given arguments\n"),a("em",[t._v("text")]),t._v(", "),a("em",[t._v("pos")]),t._v(", and "),a("em",[t._v("self")]),t._v(", returns the length of a match in "),a("em",[t._v("text")]),t._v("\nstarting at index "),a("em",[t._v("pos")]),t._v(".  "),a("em",[t._v("pos")]),t._v(" is the index right after the link prefix.\n"),a("em",[t._v("self")]),t._v(" can be used to access the linkify object to cache data.")]),t._v(" "),a("li",[a("em",[t._v("normalize")]),t._v(" - optional function to normalize text & url of matched result\n(for example, for twitter mentions).")])])])])])]),t._v(" "),a("p",[a("code",[t._v("options")]),t._v(":")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("fuzzyLink")]),t._v(" - recognize URL-s without "),a("code",[t._v("http(s)://")]),t._v(" head. Default "),a("code",[t._v("true")]),t._v(".")]),t._v(" "),a("li",[a("strong",[t._v("fuzzyIP")]),t._v(" - allow IPs in fuzzy links above. Can conflict with some texts\nlike version numbers. Default "),a("code",[t._v("false")]),t._v(".")]),t._v(" "),a("li",[a("strong",[t._v("fuzzyEmail")]),t._v(" - recognize emails without "),a("code",[t._v("mailto:")]),t._v(" prefix. Default "),a("code",[t._v("true")]),t._v(".")]),t._v(" "),a("li",[a("strong",[t._v("---")]),t._v(" - set "),a("code",[t._v("true")]),t._v(" to terminate link with "),a("code",[t._v("---")]),t._v(" (if it's considered as long dash).")])]),t._v(" "),a("h3",{attrs:{id:"test-text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test-text"}},[t._v("#")]),t._v(" .test(text)")]),t._v(" "),a("p",[t._v("Searches linkifiable pattern and returns "),a("code",[t._v("true")]),t._v(" on success or "),a("code",[t._v("false")]),t._v(" on fail.")]),t._v(" "),a("h3",{attrs:{id:"pretest-text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pretest-text"}},[t._v("#")]),t._v(" .pretest(text)")]),t._v(" "),a("p",[t._v("Quick check if link MAY BE can exist. Can be used to optimize more expensive\n"),a("code",[t._v(".test()")]),t._v(" calls. Return "),a("code",[t._v("false")]),t._v(" if link can not be found, "),a("code",[t._v("true")]),t._v(" - if "),a("code",[t._v(".test()")]),t._v("\ncall needed to know exactly.")]),t._v(" "),a("h3",{attrs:{id:"testschemaat-text-name-offset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#testschemaat-text-name-offset"}},[t._v("#")]),t._v(" .testSchemaAt(text, name, offset)")]),t._v(" "),a("p",[t._v("Similar to "),a("code",[t._v(".test()")]),t._v(" but checks only specific protocol tail exactly at given\nposition. Returns length of found pattern (0 on fail).")]),t._v(" "),a("h3",{attrs:{id:"match-text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match-text"}},[t._v("#")]),t._v(" .match(text)")]),t._v(" "),a("p",[t._v("Returns "),a("code",[t._v("Array")]),t._v(" of found link matches or null if nothing found.")]),t._v(" "),a("p",[t._v("Each match has:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("schema")]),t._v(" - link schema, can be empty for fuzzy links, or "),a("code",[t._v("//")]),t._v(" for\nprotocol-neutral  links.")]),t._v(" "),a("li",[a("strong",[t._v("index")]),t._v(" - offset of matched text")]),t._v(" "),a("li",[a("strong",[t._v("lastIndex")]),t._v(" - index of next char after mathch end")]),t._v(" "),a("li",[a("strong",[t._v("raw")]),t._v(" - matched text")]),t._v(" "),a("li",[a("strong",[t._v("text")]),t._v(" - normalized text")]),t._v(" "),a("li",[a("strong",[t._v("url")]),t._v(" - link, generated from matched text")])]),t._v(" "),a("h3",{attrs:{id:"tlds-list-keepold"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tlds-list-keepold"}},[t._v("#")]),t._v(" .tlds(list[, keepOld])")]),t._v(" "),a("p",[t._v("Load (or merge) new tlds list. Those are needed for fuzzy links (without schema)\nto avoid false positives. By default:")]),t._v(" "),a("ul",[a("li",[t._v("2-letter root zones are ok.")]),t._v(" "),a("li",[t._v("biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф are ok.")]),t._v(" "),a("li",[t._v("encoded ("),a("code",[t._v("xn--...")]),t._v(") root zones are ok.")])]),t._v(" "),a("p",[t._v("If that's not enough, you can reload defaults with more detailed zones list.")]),t._v(" "),a("h3",{attrs:{id:"add-key-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-key-value"}},[t._v("#")]),t._v(" .add(key, value)")]),t._v(" "),a("p",[t._v("Add a new schema to the schemas object.  As described in the constructor\ndefinition, "),a("code",[t._v("key")]),t._v(" is a link prefix ("),a("code",[t._v("skype:")]),t._v(", for example), and "),a("code",[t._v("value")]),t._v("\nis a String to alias to another schema, or an Object with "),a("code",[t._v("validate")]),t._v(" and\noptionally "),a("code",[t._v("normalize")]),t._v(" definitions.  To disable an existing rule, use\n"),a("code",[t._v(".add(key, null)")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"set-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-options"}},[t._v("#")]),t._v(" .set(options)")]),t._v(" "),a("p",[t._v("Override default options. Missed properties will not be changed.")]),t._v(" "),a("h2",{attrs:{id:"license"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[t._v("#")]),t._v(" License")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/markdown-it/linkify-it/blob/master/LICENSE",target:"_blank",rel:"noopener noreferrer"}},[t._v("MIT"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);